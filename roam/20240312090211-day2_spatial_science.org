:PROPERTIES:
:ID:       4ae9f0e0-db23-4fc6-b884-ab811e9a5f01
:END:
#+title: day2_spatial_science


* intro to ~sf~ and ~stars~

simple features is a "formal standard"

* Point Pattern

Important distinction between a point pattern and a point process:

 - point process is the stochastic process (c'est une idee ou un modele) that when sampled generated a

 - point pattern

A data set is always point pattern.

CSR: complete spatial randomnes

inhomogeneous point pattern

~rpoispp~ can take function or a constant

thomas process = rThomas (point attracted)

inhibition process : point are inhibited when close to each other (~rHardcore~)

We can combine them

** sf

si on pas envie d'utiliser la class sf on peut utiliser ~as.data.frame~

*** operations sur attributs

*** operations juste sur la geometry

- predicates (unary or binary)

- mesures (distances) distance is shorter distance , border to border and not node to node

- transformers buffer, centroid

*** operations juste sur les deux

st_join, aggregate, st_interpolate_aw (pas mal pour les trucs ou le support est bien la surface)

** spatstat

il travaille juste un espace plan.

bon example: fabrique deux point (0,1) et (0,0), distance de 1 dans un plan. Si on passe avec ~st_sfc(p1, crs = 'OGC:CRS84')~ on obtient un resultats diff.

si on passe un object avec un polygon et des point a as.ppp il va le prendre comme fenetre.

density de spastats utilise un kernel que l'on peut parametrer avec un $sigma$

gaussian kernel est infini, qui permet de ponderer avec une distribution gaussienne.

top of the curve: more clustered

bottom of the curve: inhibition car on a pas de points qui tombe dans le kernel

il faut faire attention un processus non homogene peut estimer un clustering alors que le process n'est pas regrouper mais a un gradiant.

difference between a trend a pattern residual, a kernel is always local (so scales kind of matter).

Besoin de reagrder MaxEnvt


* Exercices
** exercice 1

#+begin_src R :session *R*
library("spatstat"); library("sf"); library("ggplot2")

longleaf_sf <- st_as_sf(longleaf)
names(longleaf_sf)[1] <- "DBH"

ggplot() +
  geom_sf(data = longleaf_sf[1,]) +
  geom_sf(data = longleaf_sf[!is.na(longleaf_sf$DBH),],
          aes(size = DBH ), pch = 1)

pine <- longleaf_sf[!is.na(longleaf_sf$DBH),]
plot(pine["DBH"], pch = 1, col = 2, cex = log(pine[["DBH"]]))

#+end_src

#+RESULTS:

** exercice 2
#+begin_src R :session *R*
no2 <- read.csv(system.file("external/no2.csv",
    package = "gstat"))
# should have go to pp straight
no2_sf <- st_as_sf(no2,
                   coords = c("station_longitude_deg",
                          "station_latitude_deg" ))
no2_ppp <- as.ppp(no2_sf)
#+end_src

#+RESULTS:
| station_european_code        |
| station_local_code           |
| country_iso_code             |
| country_name                 |
| station_name                 |
| station_start_date           |
| station_end_date             |
| type_of_station              |
| station_ozone_classification |
| station_type_of_area         |
| station_subcat_rural_back    |
| street_type                  |
| station_longitude_deg        |
| station_latitude_deg         |
| station_altitude             |
| station_city                 |
| lau_level1_code              |
| lau_level2_code              |
| lau_level2_name              |
| EMEP_station                 |
| NO2                          |
