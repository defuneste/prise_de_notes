:PROPERTIES:
:ID:       5e71f432-f392-4a83-8636-eacf55ceee43
:END:
#+title: fonctions_text_sql

Il existe des fonctions pour :

- reformater des chaines de caractères

- "parser" ces dernières

- déterminer leur longueur (~CHAR_LENGTH~ ou ~LENGTH~) et la place de caractère spécifique (~POSITION~)

- les couper ou fusionner

** Tas de fonctions utiles pour reformater du texte

~upper(ma_colonne)~ tout est capitalisé
~initcap(ma_colonne)~ juste la première colonne est en majuscule
~lower(ma_colonne)~ mets tout en miniscule

cf. plus bas ltrim pour enlever un WS en debut

** Concatenation

#+begin_src sql
SELECT
        prénom,
        nom,
        prénom || ' ' ||nom as nom_complet
FROM customer;

-- il est aussi possible d'utiliser CONCAT

SELECT
            CONCAT(prénom, ' ', nom ) as nom_complet
FROM customer;
            --- concat() peut aussi ingérer un NULL et retourner un blanc alors que || renvera NULL
#+end_src


Rq: on peut utiliser des nom de colo oTnnes mais aussi des constantes.


~concat_ws('_ ', une, liste, de, colones)~ : ici on concatène avec With Separator

** Parsing

~LEFT(data, 50)~ -> extrait les 50 premier caractères. Il existe aussi RIGHT.

SUBSTRING(data, 10, 50) -> on commence à 10 et on prends les 50 premiers.

#+begin_src sql
-- avant @
SELECT
        SUBSTRING(email from 0 for position('@' IN email) )
FROM customer;
-- après @
SELECT
            substring(email from POSITION('@' in email) + 1 FOR CHAR_LENGTH(email))
FROM customer;
#+end_src


** Splitting

Séparer du texte par un delimiteur

~select split_part(string, delimiter, part);~

~part~ est ce que l'on souhaite garder


** Trimming

TRIM([LEADING | TRAILING | BOTH] [characters] FROM string)

BOTH is the default

si characters n'est pas indiqué le defaut est WS.

LTRIM et RTRIM sont les versions left et right.

** PADDING

Si on veut une chaine de caractères avec une longueur fixe est qu'elle est moindre on peut rajouter des caractéres d'un coté.

#+begin_src sql
SELECT LPAD('padded', 10, '*');
-- ici on rajoute des * pour avoir 10 car
-- LPAD ajoute à gauche
#+end_src

** full-text search

#+begin_src sqlite
SELECT title, description
FROM film
WHERE to_tsvector(title) @@ to_tsquery('elf');
#+end_src

tsvector est une liste des mots (+ exactement des lexemes).

*** Stemming

*** Spelling mistakes

*** Ranking

* Enchainer les transformations

Si il y beaucoup de nettoyage à faire, c'est utile de faire:

1. une table temporaire (CREATE TEMP TABLE) avec la valeurs raw et la transformé

2. puis on utilise:

#+begin_src sql
update nom_table
    set nom_col = nouvelle_valeur
where condition;
#+end_src


3. Enfin on peut rejoindre à la table d'origine.
