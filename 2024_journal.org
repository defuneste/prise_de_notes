#+title: Journal 2024
#+author: Olivier leroy


* <2024-01-01 Mon>

Nouvelle annee, resolution tenir le journal jusqu'au bout et transformer certains partie en memo (blog post?)

- ne pas distinguer le journal du taff du perso
- pas encore certains d'utiliser org roam + un journal a voir

** org mod :org:mode:

    Utiliser plus souvent les tags ref: https://orgmode.org/guide/Tags.html

** building repro analytical pipeline :rstats:

*** chapitre 4:

Pedagogique, sans doute tres utile pour un etudiant et/ou un jeune DA

Chose nouvelle apprise: ~git stash~

Permet de revenir as ~HEAD~

#+begin_src bash
mkdir temp/
cd temp
git init
echo "bob" > unfichier.txt
git add .
git commit -m "init"
rm unfichier.txt
git add .
git stash
cd ..
rm -rf temp
#+end_src

#+RESULTS:
| Reinitialized | existing | Git       | repository | in    | /Users/olivierleroy/Documents/oli/prise_de_notes/temp/.git/ |     |    |         |         |      |
| On            | branch   | master    |            |       |                                                           |     |    |         |         |      |
| nothing       | to       | commit,   | working    | tree  | clean                                                     |     |    |         |         |      |
| Saved         | working  | directory | and        | index | state                                                     | WIP | on | master: | 5c5c45b | init |

*trunk base development* :  https://trunkbaseddevelopment.com/

On vera sans doute plus tard mais en gros on dev sur dev et fork des releases qui elles sont stables.

* <2024-01-02 Tue>

** chapitre 5 reproducible pip R :rstats:

trunk based dev: en gros des commits tres frequents, faciliter par de la double revision. L'objectif est de diviser le development en petite taches permettant de petite commit, dev sur une autre branche et merger rapidement.

Dans le cas de taches importantes il est recommande d'utiliser une technique appelle "branch bt abstraction" qui consiste a utiliser des placeholders qui seront ameliore petit a petit. (https://martinfowler.com/bliki/BranchByAbstraction.html)

Le tronc est sense etre toujours "production rdy"

l'obligation de sousmettre une PR pourmodifier le tronc renforce cette pratique

*** BEAD :mbtiles:PG:

pas d option de filter sur un array dans mbtiles

bcp de wrangling pour former un jeux de donnees test, pas mal de changement de specs,

les fonctions d'aggregation de PG peuvent prendre un order by et un distinct:

~json_agg('isp_id' || ' ' || isp_id order by isp_id) as isp_num~

** TED

vue metadata avec Dolley

* <2024-01-03 Wed>

** bead :PG:

~ctid~ est une colonne utile pour avoir un id pour des jointures, elle reference la place en memoire de l info

https://www.postgresql.org/docs/current/ddl-system-columns.html

*** RDOF

targets a un format url pour suivre l update d'un fichier en ligne cf ~format = "url"~

https://www.fcc.gov/document/fcc-proposes-over-8m-fines-against-22-rdof-applicants-defaults

** general

penser a organiser un meeting ou on fixe les donnees, leur types, leur noms

* <2024-01-04 Thu>

** bead

0 for null in isp_id for every count

pas mal de test avec le types pour les mbtiles fixe la structure de donnees

*** pg stuff :PG:

replace() a un equivalent  REGEXP_replace(isp_idv2, '{|}', '', 'g')  avec un argument pour faire une regex global

todo demain clean le mess d acs pipeline


** jour poses

01/01/2024
05/27/2024
06/14/2024
06/19/2024
09/01/2024
11/28/2024
11/29/2024
12/25/2024

** chapitre 6 Functional programming

Utilisation de fonction d'ordre superieur

on a un premier passage qui indique ce qu'est l'etat a travers un exemple de ce qui est en memoire. L'etat ne devrait pas changer le resultats d'une fonction.

Certains fonctions peuvent incrementer ou changer un etat dans le programe. c'est le cas par exemple d'une boucle. Je suis pas fan de l'argument de deinir la list dans comme argument.

Si une fonction est pure elle doit ne prendre en compte que des arguments dans ses arguments et pas dans d'autre environement.

#+begin_src R
y <- 10
bad <- function(x) {
       x + y
}
# un mauvais example
#+end_src


Dans R les fonction peuvent aussi etre des arguments

#+begin_src R
g <- function(number, f, ...) {
  f(number, ...)
    }
#+end_src

ici l'ellipsis permet de passer des argument pris en compte par f, l'exmple typique est ~na.rm = TRUE~.

Programmer avec cela en tete indique qu'il est sage de mettre des gardes fou a ses functions, l'exemple utilise est ~sqrt(-5)~ qui ne produit que un warnings et ne retourne pas un nombre mais NaN.

 Un autre exmemple que l'auteur utilise est un wrapper generique autour de ~trycatch()~ qui permet de faire une fonction qui retourne un warnings en erreur.

 Cela permet aussi d'introduire les function factories: ie des fonctions qui vont retourner des fonctions.

 Les arguments par defaut sont rapdiement introduits.

 Assertive/safe programming est aussi introduit. Ce n'est pas toujours limpide pour moi jusqu'ou tester.

 l'aurteur deconseil aussi d'utiliser des fonctions recursives. Aucune idee de pkoi mon intuition est que R est pas fait pour garder en memoire (ici dans l env de la fonction) le resultat de la fonction precedente.

 L'auteur se reclame aussi de la penser unix pour demander une decomposition en petite fonction. Je suis pas expert.

 IL y a un gros passage sur l'interet des listes. Cela lui permet d'introduire Reduce et Map. Il y aussi un gros passage sur les lists dans les colonnes et comment cela permet de faire des graphiques parametres.

 S3, purrr et withr sont introduit succintement.

* <2024-01-05 Fri>

jour de nettoyage, bead et TED pipeline

bcp a faire sur BEAD, car c'est un mixe de sql lance via pg admin et de targets

je ne suis pas claire sur ce que fait crew, est une interface derriere plusieurs moteur ou un moteur sur une interface specifique

* <2024-01-07 Sun>

** R stuff :rstats:

~getS3method("function", "class")~ permet de lister les methodes

~sf:::print.sgbp~  marche aussi

* <2024-01-08 Mon>

** TED

pas mal de pb avec la pipeine, merged le bazard et reussi a mettre a jour, pas vraiment appris grand chose si ce n'est que data table n'est multi thread que si ~libomp~ est disponible.

** BEAD

pas mal d'explo avec isp la version json introduit des ~"~ ce qui change l'ordre du classement mais ne devrais pas changer le nombre ..

* <2024-01-09 Tue>


flood

** bead

essaie de regrouper en une seule pileine BEAD stuff

** <2024-01-10 Wed>

pas de meetng et discussion sur l'archivage, l'utilisation du cache

nettoyage de certains repos et merge de branche

un peu de test d sqlite avec gpkg

* <2024-01-11 Thu>

mon plan isp et rdof

** rdof

fork it and just do one for RDOF

verifications des fichier downloades

*** R stuff :rstats:
se rapeller

#+begin_src R
test <- system2("ls", "xx",
    stdout = TRUE, stderr = TRUE)

attr(test, "status")
# va retourner 1
#+end_src

pratique pour tester des lignes de commandes

Pour sauver une targets dans mermaid:

#+begin_src R
mm <- tar_mermaid()
writeLines(mm, "tar
    get_mermaid.js")

#+end_src


* <2024-01-12 Fri>

** metadata

petit bilan de metadata et test de {dm} pour representer un schema

** BEAD

    isp / rdof

* <2024-01-15 Mon>


** BEAD

rdof premiere version pour authorized + test versus previous data

* <2024-01-16 Tue>

Do a bit of stuff for Camden

** BEAD

finalement compris ready to authorized / authorized / et default category

mis en place default mais difference avec previous version

** book club :rstats:

~methods(class = "table")~

* <2024-01-17 Wed>


** BEAD

simplification de la logique de rdof entre auth , les deux versions de default

postgresql has des operations de set https://www.postgresql.org/docs/current/queries-union.html


* <2024-01-18 Thu>

** BEAD

on a bouger enfin sur rdof

technology flags, geoid bl x tech x new alias

je me suis rapeller que j'ai le tab 10 20 du census pour la mise en relation

** job

https://join.tts.gsa.gov/resume/

* <2024-01-20 Sat>

je rejoute le vendredi passe:

aws fait payer ses instances T sur la base de nano puis applique un multiplicateur en fonctiom.
Par exemple on multiplie par 32 pour passer a "large"

update de mon pgpass pro

Il est possible de passer des var de psql via sql et de le faire de make via shell

lower + raise + j switch back to qwerty

* <2024-01-22 Mon>

** BEAD

isp cleaning and docs

advetised speed upload and download max by technology / provider

has_award_geoid_bl doit etre false if null (pareil for has_technology)

0 can be "not reported"

combo requriement and day to day; how do we solve this issue

giving agenda, project leadership, provide more feedback


* <2024-01-23 Tue>

** BEAD

pas mald e mise en place pour l'echantillon


* <2024-01-24 Wed>

copy crosswalk to bead schema

dm materialise les relations one to many -> one en surlignant le nom de la colonne.


* <2024-01-25 Thu>

penser a organiser les ticket / tasks

 is_ogr2ogr_here <- function() {
    ogr_version <- system2("ogr2ogr", "--version",
                           stdout = TRUE, stderr = TRUE)
    if (! is.null(attr(ogr_version, "status"))) stop("Is ogr2ogr installed?")
    return(0)
  }

* <2024-01-26 Fri>

on mange la pilllule et on test la methode ntia

pas mal de temps sur git: il faut toujoirs penser etre sur un graph

eu  un pb avec targets impossible a debugger, un reset hard sur la tete a resolu le pb

* <2024-01-29 Mon>


** bead

assez chiand de refaire le calcul d egibilite mais je peux simplifier certaines requetes sql.

AK legend

250010102062053

toujours verifier ses count(*), cela compte les lignes
* <2024-01-30 Tue>

we want :
  - we keep cnt_100_20
  - same for cnt_25_3
  - cnt_100_20 cable / fiber
  - underserved (25/3 > undersved < 100/20) cable / fiber
  - underserved dsl
  - undersedved fixed wireless



we want:
   - bl_100_20_area_cable_fiber

     bl_area_25_3_area_cable_fiber
      - 50/10 DSL <- does need to be counted here

   - bead_category_cable_fiber

* <2024-01-31 Wed>


pas mal de rush pour essayer d'ajouter un filtre underserved,

eda pour l'explorer, debut de rassemblement de

* <2024-02-01 Thu>

push to mapbox, me suis fait avoir par un shadow update de fcc

* <2024-02-02 Fri>

https://usbuildingdata.blob.core.windows.net/usbuildings-v2/Alabama.geojson.zip

* <2024-02-11 Sun>

un peu en retard pour la semaine.

j'ai pas mal tester jq (stream et non stream) et gnu parallel.

il me faut un model pour tester l'imprecision des buildings / fcc

commencer les routes par miles

ogr tricK : ~ogrinfo -al -so my.shp~

* <2024-02-12 Mon>

** BEAD

- rebuild with new requirements

- vu avec britany comment produire les tableau pour usda

- build ms for all geoid bl

** nouvelle machine

- [x] brew
- [x] slack/gh/google
- [x] iterm
- [x] R and VScode (+ radian, httpgd, languageserver)
- [x] emacs + doom
- [x] PG + postgis

* <2024-02-13 Tue>

commande pratique sur mac avec brew:

- brew list et brew cask --cask

* <2024-02-14 Wed>

acs

dot provides density

coloring block by nb of locations underserved / unserved

show only at specific scale / visual

road data: scale less useful at block but better at bigger aera

"premises per miles" / how you display that?

- what roads

- 500 feets,

** other scale/spatial join:

aggregate of premises count


* <2024-02-15 Thu>

pas mal de jq / bb calcul pour leur blog

* <2024-02-16 Fri>

* <2024-02-20 Tue>

** bead :PG:

st_memunion est une version moins gourmande en memoire que st_union

* <2024-02-21 Wed>

eligigibility -> bead_category

#+begin_src R
m <- mirai::mirai({
      library(nanonext)
      rep <- socket("rep", listen = "tcp://127.0.0.1:6556")
      reply(context(rep), execute = Sys.getpid, send_mode = "raw")
    })
#+end_src

https://beej.us/guide/bgnet0/html/split/networking-overview.html slowly learning

- pas mal de tiles pour BEAD

* <2024-02-22 Thu>

#+begin_src bash
docker run --rm -v $PWD:/tmp ghcr.io/degauss-org/geocoder:3.3.0 my_address_file.csv
#+end_src

- bcp de debugging, bcp trop de cc dans nos pipelines

* <2024-02-23 Fri>

Make automatic variable:

- ~$@~ the target of current rule

- ~$^~ dependecies

pas mal de pb avec TED, il faut revoir ce sschema

* <2024-02-26 Mon>

** bead

debut de rapatriement de rdof in the bead repo

modification du script pour dl un pgkg

meeting data

ajout de count loc pour aggregats tr / eligibility

* <2024-02-27 Tue>

** bead

recalcul d'un eligibility tr mais avec un dsl excluded

** calix

survey/outreach ntca spead capability / video services / cables

community based. edging network to other community

small coop/co -> telephone -> moved to broadband

education to community

VA services

850 isp
